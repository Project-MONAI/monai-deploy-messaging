/*
 * Copyright 2022-2023 MONAI Consortium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using Monai.Deploy.Messaging.Common;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization;

namespace Monai.Deploy.Messaging.Events
{
    public class ArtifactsReceivedEvent : EventBase
    {
        /// <summary>
        /// Gets or sets the ID of the payload which is also used as the root path of the payload.
        /// </summary>
        [JsonProperty(PropertyName = "payload_id")]
        [JsonPropertyName("payload_id")]
        [Required]
        public Guid PayloadId { get; set; }

        /// <summary>
        /// Gets or sets the associated workflows to be launched.
        /// </summary>
        [JsonProperty(PropertyName = "workflows")]
        [JsonPropertyName("workflows")]
        public IEnumerable<string> Workflows { get; set; } = new List<string>();

        /// <summary>
        /// Gets or sets number of files in the payload.
        /// </summary>
        [JsonProperty(PropertyName = "file_count")]
        [JsonPropertyName("file_count")]
        [Required]
        public int FileCount { get; set; }

        /// <summary>
        /// For DIMSE, the correlation ID is the UUID associated with the first DICOM association received.
        /// For an ACR inference request, the correlation ID is the Transaction ID in the original request.
        /// </summary>
        [JsonProperty(PropertyName = "correlation_id")]
        [JsonPropertyName("correlation_id")]
        [Required]
        public string CorrelationId { get; set; } = default!;

        /// <summary>
        /// Gets or set the name of the bucket where the files in are stored.
        /// </summary>
        [JsonProperty(PropertyName = "bucket")]
        [JsonPropertyName("bucket")]
        [Required]
        public string Bucket { get; set; } = default!;

        /// <summary>
        /// Gets or sets the service that received the original request.
        /// </summary>
        [JsonProperty(PropertyName = "trigger")]
        [JsonPropertyName("trigger")]
        public DataOrigin DataTrigger { get; set; } = default!;

        /// <summary>
        /// Gets or sets the data origins that were involved in triggering this workflow request.
        /// </summary>
        [JsonProperty(PropertyName = "data_origins")]
        [JsonPropertyName("data_origins")]
        public List<DataOrigin> DataOrigins { get; private set; } = new List<DataOrigin>();

        /// <summary>
        /// Gets or sets the time the data was received.
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        [JsonPropertyName("timestamp")]
        [Required]
        public DateTime Timestamp { get; set; }

        /// <summary>
        /// Gets or sets the workflow instanceID generated by the Workflow Manager.
        /// </summary>
        [JsonProperty(PropertyName = "workflow_instance_id")]
        [JsonPropertyName("workflow_instance_id")]
        [Required]
        public string? WorkflowInstanceId { get; set; } = default!;

        /// <summary>
        /// Gets or sets the export task ID generated by the Workflow Manager.
        /// </summary>
        [JsonProperty(PropertyName = "task_id")]
        [JsonPropertyName("task_id")]
        [Required]
        public string? TaskId { get; set; } = default!;

        /// <summary>
        /// Gets or set the list of artifacts.
        /// </summary>
        [JsonProperty(PropertyName = "artifacts")]
        [JsonPropertyName("artifacts")]
        [Required]
        public List<Artifact> Artifacts { get; set; } = new List<Artifact>();
    }
}
