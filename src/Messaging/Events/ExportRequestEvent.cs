// SPDX-FileCopyrightText: © 2021-2022 MONAI Consortium
// SPDX-License-Identifier: Apache License 2.0

using System.ComponentModel.DataAnnotations;
using Newtonsoft.Json;

namespace Monai.Deploy.Messaging.Events
{
    public class ExportRequestEvent : EventBase
    {
        /// <summary>
        /// Gets or sets the workflow instance ID generated by the Workflow Manager.
        /// </summary>
        [JsonProperty(PropertyName = "workflow_instance_id")]
        [Required]
        public string WorkflowInstanceId { get; set; } = default!;

        /// <summary>
        /// Gets or sets the export task ID generated by the Workflow Manager.
        /// </summary>
        [JsonProperty(PropertyName = "export_task_id")]
        [Required]
        public string ExportTaskId { get; set; } = default!;

        /// <summary>
        /// Gets or sets a list of files to be exported.
        /// </summary>
        [JsonProperty(PropertyName = "files")]
        [Required, MinLength(1)]
        public IEnumerable<string> Files { get; set; } = default!;

        /// <summary>
        /// Gets or sets the export target.
        /// For DIMSE, the named DICOM destination.
        /// For ACR, the Transaction ID in the original inference request.
        /// </summary>
        [JsonProperty(PropertyName = "destinations")]
        [Required]
        public string[] Destinations { get; set; } = default!;

        /// <summary>
        /// Gets or set the correlation ID.
        /// For DIMSE, the correlation ID is the UUID associated with the first DICOM association received.
        /// For ACR, use the Transaction ID in the original request.
        /// </summary>
        [JsonProperty(PropertyName = "correlation_id")]
        [Required]
        public string CorrelationId { get; set; } = default!;

        /// <summary>
        /// Gets or sets the delivery tag or acknowledge token for the task.
        /// </summary>
        public string DeliveryTag { get; set; } = default!;

        /// <summary>
        /// Gets or sets the message ID set by the message broker.
        /// </summary>
        public string MessageId { get; set; } = default!;

        /// <summary>
        /// Gets or sets error messages related to this export task.
        /// </summary>
        public List<string> ErrorMessages { get; private set; }

        public ExportRequestEvent()
        {
            ErrorMessages = new List<string>();
        }

        public void AddErrorMessages(IList<string> errorMessages)
        {
            ErrorMessages.AddRange(errorMessages);
        }
    }
}
